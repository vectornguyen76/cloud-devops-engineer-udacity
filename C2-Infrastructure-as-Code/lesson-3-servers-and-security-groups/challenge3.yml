AWSTemplateFormatVersion: 2010-09-09
Description: ---
Parameters: 
  AMItoUse:
    Description: AMI to use for our base image - Amazon Linux 2023 AMI
    Type: String
    Default: 'ami-0715c1897453cabd1'

Resources: 
# IAM Role to allow EC2 Session Manager to access our server
  IAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'
      Tags:
        - Key: stack
          Value: production

# Instance Profile
  ServerInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref IAMRole

# Security Group
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: mySecurityGroup
      GroupDescription: Allow http to client host
      VpcId: !ImportValue VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: "-1"
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: stack
          Value: production

# Server EC2 Instance
  ServerInstance: 
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.micro
      ImageId: !Ref AMItoUse
      IamInstanceProfile: !Ref ServerInstanceProfile
      NetworkInterfaces: 
        - AssociatePublicIpAddress: true
          DeviceIndex: "0"
          GroupSet: 
            - !Ref SecurityGroup 
          SubnetId: !ImportValue PublicSubnet
      Tags:
        - Key: stack
          Value: production