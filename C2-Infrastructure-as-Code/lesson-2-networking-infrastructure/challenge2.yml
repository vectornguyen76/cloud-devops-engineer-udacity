AWSTemplateFormatVersion: 2010-09-09
Description: Creates the required network infrastructure for Public and Private routing with Internet access
Parameters:
    VpcCIDR:
        Description: "VPC range"
        Type: String
        Default: ""

    PublicSubnetCIDR:
        Description: "Public subnet CIDR block"
        Type: String
        Default: ""

    PrivateSubnetCIDR:
        Description: "Private subnet CIDR block"
        Type: String
        Default: ""
Resources: 
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      Tags: 
        - Key: Name
          Value: "Main VPC"

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Internet Gateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: 'us-east-1a'
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCIDR
      Tags: 
        - Key: Name
          Value: "Public Subnet AZ1"
          
  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: 'us-east-1a'
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetCIDR
      Tags: 
        - Key: Name
          Value: "Private Subnet AZ1"

  NATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
        AllocationId: !GetAtt NATGatewayEIP.AllocationId
        SubnetId: !Ref PublicSubnet
        Tags:
        - Key: Name
          Value: "NAT to be used by servers in the private subnet"

  NATGatewayEIP:
    Type: AWS::EC2::EIP
    Properties:
        Domain: vpc
        Tags:
        - Key: Name
          Value: "Elastic IP for our NAT Gateway"

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: "Public Route Table"

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: "Private Route Table"

  SubnetRouteTableAssociationPub:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  SubnetRouteTableAssociationPri:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable     

  PublicRouteNATGateway:
    DependsOn: NATGateway
    Type: AWS::EC2::Route
    Properties:
        RouteTableId: !Ref PublicRouteTable
        DestinationCidrBlock: '0.0.0.0/0'
        GatewayId: !Ref InternetGateway

  PrivateRouteNATGateway:
    DependsOn: NATGateway
    Type: AWS::EC2::Route
    Properties:
        RouteTableId: !Ref PrivateRouteTable
        DestinationCidrBlock: '0.0.0.0/0'
        NatGatewayId: !Ref NATGateway
      
Outputs:
  VPC:
    Description: "A reference to the created VPC"
    Value: !Ref VPC
    Export:
      Name: VPC

  PublicSubnet:
    Description: "A reference to the created public subnet"
    Value: !Ref PublicSubnet
    Export:
      Name: PublicSubnet

  PrivateSubnet:
    Description: "A reference to the created private subnet"
    Value: !Ref PrivateSubnet
    Export:
      Name: PrivateSubnet